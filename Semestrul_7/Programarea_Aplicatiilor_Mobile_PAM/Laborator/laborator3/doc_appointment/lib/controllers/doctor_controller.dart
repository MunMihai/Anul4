import 'package:doc_appointment/controllers/main_controller.dart';
import 'package:doc_appointment/models/doctors.dart';
import 'package:get/get.dart';

class DoctorController extends GetxController {
  List<Doctors> doctors = [];
  RxList<Doctors> sortedDoctors = RxList<Doctors>();
  var selectedFilter = "Default".obs;
  final _mainController = Get.find<MainController>();


  @override
  Future onInit() async{
    super.onInit();
    await loadDoctors();
  }

  Future loadDoctors() async{
    doctors = _mainController.autogenerated?.doctors ?? [];
    sortedDoctors.assignAll(doctors);
  }

  void sortDoctors(String criteria) {
    if (criteria == 'name') {
      sortedDoctors.sort((a, b) => a.fullName!.compareTo(b.fullName!));
      selectedFilter.value = 'Name'; 
    } else if (criteria == 'rating') {
      sortedDoctors.sort((a, b) => b.reviewRate!.compareTo(a.reviewRate!)); 
      selectedFilter.value = 'Rating'; 
    } else if (criteria == 'reviews') {
      sortedDoctors.sort((a, b) => b.reviewsCount!.compareTo(a.reviewsCount!)); 
      selectedFilter.value = 'Reviews'; 
    } else {
      sortedDoctors.assignAll(List.from(doctors));
      selectedFilter.value = 'Default'; 
    }
  }

  void toggleFavorite(Doctors doctor){
    doctor.isFavorite = !doctor.isFavorite!;
    update();
  }
   
}
